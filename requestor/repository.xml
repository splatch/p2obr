<repository name='cave-repo' lastmodified='20111128043258.537'>
  <resource id='org.apache.aries.blueprint/0.3.1' symbolicname='org.apache.aries.blueprint' presentationname='Apache Aries Blueprint Bundle' uri='org.apache.aries.blueprint-0.3.1.jar' version='0.3.1'>
    <description>This bundle contains the standalone implementation along with the API.        It&apos;s composed of the blueprint-api, blueprint-core and blueprint-cm modules.</description>
    <size>370673</size>
    <documentation>http://www.apache.org</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.aries.blueprint'/>
      <p n='presentationname' v='Apache Aries Blueprint Bundle'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
      <p n='osgi.service.blueprint.namespace' v=''/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
      <p n='osgi.service.blueprint.namespace' v='http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.ParserService'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint'/>
      <p n='version' t='version' v='1.0.1'/>
      <p n='uses:' v='org.osgi.service.blueprint.container,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.apache.aries.blueprint.ext,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.compendium.cm'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.container'/>
      <p n='version' t='version' v='1.0.1'/>
      <p n='uses:' v='org.osgi.service.blueprint.reflect,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.osgi.service.blueprint.container,org.apache.aries.blueprint.mutable,org.slf4j,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.compendium.cm'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.osgi.service.cm,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.slf4j,org.apache.aries.blueprint.container,org.apache.aries.blueprint.ext,org.w3c.dom,org.apache.aries.blueprint.mutable'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.namespace'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.reflect,org.apache.aries.blueprint.container,org.osgi.framework,javax.xml.validation,org.slf4j,org.xml.sax,javax.xml.transform,org.osgi.util.tracker,javax.xml.transform.stream'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.utils'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.osgi.framework,org.apache.aries.blueprint,org.apache.aries.blueprint.container,org.apache.aries.blueprint.di,org.osgi.service.blueprint.container'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.nls'/>
      <p n='version' t='version' v='0.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.container'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.slf4j,org.apache.aries.blueprint.di,org.apache.aries.proxy,org.apache.aries.blueprint.proxy,org.apache.aries.blueprint.namespace,org.apache.aries.blueprint.reflect,javax.xml.validation,org.osgi.util.tracker,org.osgi.service.event,org.apache.aries.util,org.apache.aries.util.tracker,org.apache.aries.blueprint.annotation.service,org.apache.aries.quiesce.manager,org.apache.aries.quiesce.participant,org.xml.sax,javax.xml.parsers,javax.xml.transform.dom,org.w3c.dom,javax.xml.transform,org.apache.aries.blueprint.ext,org.apache.aries.blueprint.mutable'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.di,org.osgi.framework,org.osgi.service.blueprint.container,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.di'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.apache.aries.blueprint.container,org.osgi.service.blueprint.container,org.apache.aries.blueprint.utils,org.apache.aries.blueprint.ext,org.apache.aries.blueprint,org.osgi.service.blueprint.reflect'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.reflect'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.mutable'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.proxy'/>
      <p n='version' t='version' v='0.3.1'/>
      <p n='uses:' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.apache.aries.proxy,org.slf4j'/>
    </capability>
    <require name='service' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' extend='false' multiple='true' optional='true'>Import Service org.osgi.service.cm.ConfigurationAdmin</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=javax.xml.validation))' extend='false' multiple='false' optional='false'>Import package javax.xml.validation</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.blueprint.annotation.service))' extend='false' multiple='false' optional='true'>Import package org.apache.aries.blueprint.annotation.service;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.proxy;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.aries.quiesce.manager;resolution:=optional;version="[0.2,1.0)"</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=0.2.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='true'>Import package org.apache.aries.quiesce.participant;resolution:=optional;version="[0.2,1.0)"</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.util;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.util.tracker;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor))' extend='false' multiple='false' optional='true'>Import package org.eclipse.osgi.framework.adaptor;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core))' extend='false' multiple='false' optional='true'>Import package org.eclipse.osgi.framework.internal.core;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.osgi.internal.loader))' extend='false' multiple='false' optional='true'>Import package org.eclipse.osgi.internal.loader;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.2.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.event;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.framework;resolution:=optional;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.apache.aries.jmx.blueprint/0.3.0' symbolicname='org.apache.aries.jmx.blueprint' presentationname='Apache Aries JMX Blueprint Bundle' uri='org.apache.aries.jmx.blueprint-0.3.jar' version='0.3.0'>
    <description>This bundle contains the standalone implementation of the along with the API.</description>
    <size>68403</size>
    <documentation>http://www.apache.org</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.aries.jmx.blueprint'/>
      <p n='presentationname' v='Apache Aries JMX Blueprint Bundle'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jmx.blueprint'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jmx.blueprint.codec'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='uses:' v='javax.management.openmbean,org.apache.aries.jmx.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.osgi.service.blueprint.container'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.openmbean))' extend='false' multiple='false' optional='false'>Import package javax.management.openmbean</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version=1.5.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.container;version=1.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.reflect;version=1.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version=1.4</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.5,2)"</require>
  </resource>
  <resource id='org.apache.aries.jmx/0.3.0' symbolicname='org.apache.aries.jmx' presentationname='Apache Aries JMX Bundle' uri='org.apache.aries.jmx-0.3.jar' version='0.3.0'>
    <description>This bundle contains the standalone implementation of the along with the API.</description>
    <size>122813</size>
    <documentation>http://www.apache.org</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.aries.jmx'/>
      <p n='presentationname' v='Apache Aries JMX Bundle'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.jmx'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.jmx.framework'/>
      <p n='version' t='version' v='1.5.0'/>
      <p n='uses:' v='org.osgi.jmx,javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.jmx.service.cm'/>
      <p n='version' t='version' v='1.3.0'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.jmx.service.permissionadmin'/>
      <p n='version' t='version' v='1.2.0'/>
      <p n='uses:' v='org.osgi.jmx'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.jmx.service.provisioning'/>
      <p n='version' t='version' v='1.2.0'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.jmx.service.useradmin'/>
      <p n='version' t='version' v='1.1.0'/>
      <p n='uses:' v='org.osgi.jmx,javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.jmx.codec'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='uses:' v='org.osgi.jmx.service.useradmin,javax.management.openmbean,org.osgi.service.useradmin,org.osgi.jmx.framework,javax.management,org.osgi.service.startlevel,org.osgi.framework,org.osgi.service.packageadmin,org.osgi.jmx'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.openmbean))' extend='false' multiple='false' optional='false'>Import package javax.management.openmbean</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.util;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version=1.5.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.jmx)(version&gt;=1.0.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.jmx;version=1.0.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.jmx.framework)(version&gt;=1.5.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.jmx.framework;version=1.5.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.jmx.service.cm)(version&gt;=1.3.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.jmx.service.cm;version=1.3.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.jmx.service.permissionadmin)(version&gt;=1.2.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.jmx.service.permissionadmin;version=1.2.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.jmx.service.provisioning)(version&gt;=1.2.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.jmx.service.provisioning;version=1.2.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.jmx.service.useradmin)(version&gt;=1.1.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.jmx.service.useradmin;version=1.1.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.cm;resolution:=optional;version=1.3.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.log;version="[1.3,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.permissionadmin)(version&gt;=1.2.0))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.permissionadmin;resolution:=optional;version=1.2.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.provisioning)(version&gt;=1.2.0))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.provisioning;resolution:=optional;version=1.2.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.startlevel;version="[1.1,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.useradmin)(version&gt;=1.1.0))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.useradmin;resolution:=optional;version=1.1.0</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
  </resource>
  <resource id='org.apache.aries.proxy/0.3.0' symbolicname='org.apache.aries.proxy' presentationname='Apache Aries Proxy Bundle' uri='org.apache.aries.proxy-0.3.jar' version='0.3.0'>
    <description>This bundle contains the Apache Aries Proxy Service.</description>
    <size>40726</size>
    <documentation>http://www.apache.org</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.aries.proxy'/>
      <p n='presentationname' v='Apache Aries Proxy Bundle'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.proxy'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='uses:' v='org.apache.aries.util.nls,org.osgi.framework'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.apache.aries.util)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.util;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.util.nls)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.util.nls;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.objectweb.asm))' extend='false' multiple='false' optional='false'>Import package org.objectweb.asm</require>
    <require name='package' filter='(&amp;(package=org.objectweb.asm.commons))' extend='false' multiple='false' optional='false'>Import package org.objectweb.asm.commons</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.5,2)"</require>
  </resource>
  <resource id='org.apache.aries.util/0.3.0' symbolicname='org.apache.aries.util' presentationname='Apache Aries Util' uri='org.apache.aries.util-0.3.jar' version='0.3.0'>
    <description>This bundle contains the OSGi common util for Apache Aries</description>
    <size>44407</size>
    <documentation>http://www.apache.org</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.aries.util'/>
      <p n='presentationname' v='Apache Aries Util'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.tracker'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.framework.launch,org.osgi.service.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.nls'/>
      <p n='version' t='version' v='0.3.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor))' extend='false' multiple='false' optional='true'>Import package org.eclipse.osgi.framework.adaptor;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core))' extend='false' multiple='false' optional='true'>Import package org.eclipse.osgi.framework.internal.core;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.eclipse.osgi.internal.loader))' extend='false' multiple='false' optional='true'>Import package org.eclipse.osgi.internal.loader;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework.launch)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.framework.launch;resolution:=optional;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.framework;resolution:=optional;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
  </resource>
  <resource id='org.apache.felix.configadmin/1.2.8' symbolicname='org.apache.felix.configadmin' presentationname='Apache Felix Configuration Admin Service' uri='org.apache.felix.configadmin-1.2.8.jar' version='1.2.8'>
    <description>Implementation of the OSGi Configuration Admin Service Specification 1.2</description>
    <size>94688</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <category id='osgi'/>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.felix.configadmin'/>
      <p n='presentationname' v='Apache Felix Configuration Admin Service'/>
      <p n='version' t='version' v='1.2.8'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.cm'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.cm.file'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='uses:' v='org.apache.felix.cm,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.cm'/>
      <p n='version' t='version' v='1.3.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.apache.felix.cm)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.cm;version="[1.0,1.1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.cm.file)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.cm.file;version="[1.0,1.1)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version=1.3</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=1.4.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,1.4)"</require>
  </resource>
  <resource id='org.apache.felix.fileinstall/3.1.10' symbolicname='org.apache.felix.fileinstall' presentationname='Apache Felix File Install' uri='org.apache.felix.fileinstall-3.1.10.jar' version='3.1.10'>
    <description>A utility to automatically install bundles from a directory.</description>
    <size>72642</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.felix.fileinstall'/>
      <p n='presentationname' v='Apache Felix File Install'/>
      <p n='version' t='version' v='3.1.10'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.fileinstall'/>
      <p n='version' t='version' v='3.1.10'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.fileinstall;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.cm;resolution:=optional;version="[1.3,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.log;resolution:=optional;version="[1.3,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.startlevel;version="[1.1,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
  </resource>
  <resource id='org.apache.felix.framework/3.0.9' symbolicname='org.apache.felix.framework' presentationname='Apache Felix Framework' uri='org.apache.felix.framework-3.0.9.jar' version='3.0.9'>
    <description>OSGi R4 framework implementation.</description>
    <size>392179</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.felix.framework'/>
      <p n='presentationname' v='Apache Felix Framework'/>
      <p n='version' t='version' v='3.0.9'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.packageadmin'/>
      <p n='version' t='version' v='1.2.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.service'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.url'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.startlevel'/>
      <p n='version' t='version' v='1.1.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.launch'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='version' t='version' v='1.4.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
  </resource>
  <resource id='org.apache.karaf.admin.command/2.2.4' symbolicname='org.apache.karaf.admin.command' presentationname='Apache Karaf :: Admin :: Command' uri='org.apache.karaf.admin.command-2.2.4.jar' version='2.2.4'>
    <description>Admin shell commands to manipulate Karaf child instances.</description>
    <size>28379</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.admin.command'/>
      <p n='presentationname' v='Apache Karaf :: Admin :: Command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.admin.command.completers'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.console,org.apache.karaf.admin,org.apache.karaf.shell.console.completer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.admin.command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.console,org.apache.karaf.admin,org.apache.felix.gogo.commands,org.apache.felix.service.command'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.admin.AdminService)' extend='false' multiple='true' optional='false'>Import Service org.apache.karaf.admin.AdminService</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands.basic)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands.basic;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.admin)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.admin;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console.completer)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console.completer;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.fusesource.jansi)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.fusesource.jansi;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.admin.core/2.2.4' symbolicname='org.apache.karaf.admin.core' presentationname='Apache Karaf :: Admin :: Core' uri='org.apache.karaf.admin.core-2.2.4.jar' version='2.2.4'>
    <description>Core implementation of the admin feature to manipulate Karaf child instances.</description>
    <size>61329</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.admin.core'/>
      <p n='presentationname' v='Apache Karaf :: Admin :: Core'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.karaf.admin.AdminService'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.admin'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jpm'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;version="[0.10,1)";status=provisional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.fusesource.jansi)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.fusesource.jansi;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
  </resource>
  <resource id='org.apache.karaf.admin.management/2.2.4' symbolicname='org.apache.karaf.admin.management' presentationname='Apache Karaf :: Admin :: Management' uri='org.apache.karaf.admin.management-2.2.4.jar' version='2.2.4'>
    <description>Provide JMX MBeans related to the Karaf admin feature.</description>
    <size>17419</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.admin.management'/>
      <p n='presentationname' v='Apache Karaf :: Admin :: Management'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.admin.management'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.admin.management.internal'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean,org.apache.karaf.admin.management,org.apache.karaf.admin,javax.management,org.apache.karaf.admin.management.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.admin.management.codec'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean,org.apache.karaf.admin.management,org.apache.karaf.admin'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='service' filter='(service=org.apache.karaf.admin.AdminService)' extend='false' multiple='true' optional='false'>Import Service org.apache.karaf.admin.AdminService</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=javax.management.openmbean))' extend='false' multiple='false' optional='false'>Import package javax.management.openmbean</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;version="[0.10,1)";status=provisional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.admin)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.admin;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.deployer.blueprint/2.2.4' symbolicname='org.apache.karaf.deployer.blueprint' presentationname='Apache Karaf :: Deployer :: Blueprint' uri='org.apache.karaf.deployer.blueprint-2.2.4.jar' version='2.2.4'>
    <description>This deployer transforms a plain blueprint xml file to a deployable bundle</description>
    <size>32396</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.deployer.blueprint'/>
      <p n='presentationname' v='Apache Karaf :: Deployer :: Blueprint'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.url.URLStreamHandlerService'/>
      <p n='url.handler.protocol' v='blueprint'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.deployer.blueprint'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.w3c.dom,org.xml.sax,org.apache.felix.fileinstall,javax.xml.parsers,org.slf4j,javax.xml.transform.dom,javax.xml.transform,javax.xml.transform.stream,org.osgi.service.url'/>
    </capability>
    <require name='service' filter='(&amp;(service=org.osgi.service.url.URLStreamHandlerService)(url.handler.protocol=blueprint))' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.url.URLStreamHandlerService</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.fileinstall;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.apache.karaf.deployer.features/2.2.4' symbolicname='org.apache.karaf.deployer.features' presentationname='Apache Karaf :: Deployer :: Features' uri='org.apache.karaf.deployer.features-2.2.4.jar' version='2.2.4'>
    <description>This deployer can deploy features descriptor on the fly</description>
    <size>33107</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.deployer.features'/>
      <p n='presentationname' v='Apache Karaf :: Deployer :: Features'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.url.URLStreamHandlerService'/>
      <p n='url.handler.protocol' v='feature'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.deployer.features'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.w3c.dom,org.xml.sax,org.apache.felix.fileinstall,javax.xml.parsers,org.osgi.framework,org.apache.karaf.features,org.slf4j,org.osgi.service.url'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.features.FeaturesService)' extend='false' multiple='true' optional='false'>Import Service org.apache.karaf.features.FeaturesService</require>
    <require name='service' filter='(&amp;(service=org.osgi.service.url.URLStreamHandlerService)(url.handler.protocol=feature))' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.url.URLStreamHandlerService</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.fileinstall;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.features)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.features;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.apache.karaf.deployer.kar/2.2.4' symbolicname='org.apache.karaf.deployer.kar' presentationname='Apache Karaf :: Deployer :: Karaf Archive (.kar)' uri='org.apache.karaf.deployer.kar-2.2.4.jar' version='2.2.4'>
    <description>This deployer can deploy .kar archives on the fly</description>
    <size>17711</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.deployer.kar'/>
      <p n='presentationname' v='Apache Karaf :: Deployer :: Karaf Archive (.kar)'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.deployer.kar'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.w3c.dom,org.xml.sax,org.apache.felix.fileinstall,javax.xml.parsers,org.apache.karaf.features,org.slf4j'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.features.FeaturesService)' extend='false' multiple='true' optional='false'>Import Service org.apache.karaf.features.FeaturesService</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.fileinstall;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.features)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.features;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.apache.karaf.deployer.spring/2.2.4' symbolicname='org.apache.karaf.deployer.spring' presentationname='Apache Karaf :: Deployer :: Spring' uri='org.apache.karaf.deployer.spring-2.2.4.jar' version='2.2.4'>
    <description>This deployer transforms a plain spring xml file to a deployable bundle</description>
    <size>32553</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.deployer.spring'/>
      <p n='presentationname' v='Apache Karaf :: Deployer :: Spring'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.url.URLStreamHandlerService'/>
      <p n='url.handler.protocol' v='spring'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.deployer.spring'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.w3c.dom,org.xml.sax,org.apache.felix.fileinstall,javax.xml.parsers,org.slf4j,javax.xml.transform.dom,javax.xml.transform,javax.xml.transform.stream,org.osgi.service.url'/>
    </capability>
    <require name='service' filter='(&amp;(service=org.osgi.service.url.URLStreamHandlerService)(url.handler.protocol=spring))' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.url.URLStreamHandlerService</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.fileinstall;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.apache.karaf.deployer.wrap/2.2.4' symbolicname='org.apache.karaf.deployer.wrap' presentationname='Apache Karaf :: Deployer :: Wrap Non OSGi Jar' uri='org.apache.karaf.deployer.wrap-2.2.4.jar' version='2.2.4'>
    <description>This deployer transforms non OSGi jar files to a deployable bundle.</description>
    <size>23796</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.deployer.wrap'/>
      <p n='presentationname' v='Apache Karaf :: Deployer :: Wrap Non OSGi Jar'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.deployer.wrap'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.felix.fileinstall'/>
    </capability>
    <require name='service' filter='(&amp;(service=org.osgi.service.url.URLStreamHandlerService)(url.handler.protocol=wrap))' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.url.URLStreamHandlerService</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.fileinstall)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.fileinstall;version="[3.1,4)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0,2)"</require>
  </resource>
  <resource id='org.apache.karaf.diagnostic.command/2.2.4' symbolicname='org.apache.karaf.diagnostic.command' presentationname='Apache Karaf :: Diagnostic :: Command' uri='org.apache.karaf.diagnostic.command-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides Karaf diagnostic shell commands.</description>
    <size>12662</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.diagnostic.command'/>
      <p n='presentationname' v='Apache Karaf :: Diagnostic :: Command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.diagnostic.command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.felix.service.command,org.apache.karaf.diagnostic.core,org.apache.karaf.shell.console,org.apache.felix.gogo.commands,org.apache.karaf.diagnostic.core.common'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.diagnostic.core.DumpProvider)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.diagnostic.core.DumpProvider</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.diagnostic.core)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.diagnostic.core;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.diagnostic.core.common)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.diagnostic.core.common;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.diagnostic.common/2.2.4' symbolicname='org.apache.karaf.diagnostic.common' presentationname='Apache Karaf :: Diagnostic :: Common' uri='org.apache.karaf.diagnostic.common-2.2.4.jar' version='2.2.4'>
    <description>Common provider for the Karaf diagnostic.</description>
    <size>15982</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.diagnostic.common'/>
      <p n='presentationname' v='Apache Karaf :: Diagnostic :: Common'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.diagnostic.common'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.osgi.framework,org.apache.karaf.diagnostic.core.common,org.apache.karaf.features,org.apache.karaf.diagnostic.core'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.features.FeaturesService)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.features.FeaturesService</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.diagnostic.core)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.diagnostic.core;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.diagnostic.core.common)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.diagnostic.core.common;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.features)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.features;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.diagnostic.core/2.2.4' symbolicname='org.apache.karaf.diagnostic.core' presentationname='Apache Karaf :: Diagnostic :: Core' uri='org.apache.karaf.diagnostic.core-2.2.4.jar' version='2.2.4'>
    <description>Core implementation using Karaf diagnostic using the diagnostic common services</description>
    <size>13430</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.diagnostic.core'/>
      <p n='presentationname' v='Apache Karaf :: Diagnostic :: Core'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.diagnostic.core'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.diagnostic.core.common'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.diagnostic.core'/>
    </capability>
  </resource>
  <resource id='org.apache.karaf.diagnostic.management/2.2.4' symbolicname='org.apache.karaf.diagnostic.management' presentationname='Apache Karaf :: Diagnostic :: Management' uri='org.apache.karaf.diagnostic.management-2.2.4.jar' version='2.2.4'>
    <description>Expose diagnostic MBeans via JMX.</description>
    <size>12464</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.diagnostic.management'/>
      <p n='presentationname' v='Apache Karaf :: Diagnostic :: Management'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.diagnostic.management'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.diagnostic.management.internal'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.diagnostic.core,org.apache.karaf.diagnostic.management,org.apache.karaf.diagnostic.core.common,javax.management'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='service' filter='(service=org.apache.karaf.diagnostic.core.DumpProvider)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.diagnostic.core.DumpProvider</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.diagnostic.core)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.diagnostic.core;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.diagnostic.core.common)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.diagnostic.core.common;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.features.command/2.2.4' symbolicname='org.apache.karaf.features.command' presentationname='Apache Karaf :: Features :: Command' uri='org.apache.karaf.features.command-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides the Karaf shell commands to manipulate features.</description>
    <size>38098</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.features.command'/>
      <p n='presentationname' v='Apache Karaf :: Features :: Command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.features.command.completers'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.features,org.apache.karaf.shell.console,org.apache.karaf.shell.console.completer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.features.command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.felix.gogo.commands,org.apache.karaf.features,org.apache.karaf.shell.console,org.osgi.framework'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.features.FeaturesService)' extend='false' multiple='true' optional='false'>Import Service org.apache.karaf.features.FeaturesService</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;version="[0.10,1)";status=provisional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.features)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.features;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console.completer)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console.completer;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.features.core/2.2.4' symbolicname='org.apache.karaf.features.core' presentationname='Apache Karaf :: Features :: Core' uri='org.apache.karaf.features.core-2.2.4.jar' version='2.2.4'>
    <description>This bundle is the core implementation of the Karaf features support.</description>
    <size>67459</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.features.core'/>
      <p n='presentationname' v='Apache Karaf :: Features :: Core'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.karaf.features.FeaturesService'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.features'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.features.FeaturesListener)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.features.FeaturesListener</require>
    <require name='service' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.cm.ConfigurationAdmin</require>
    <require name='service' filter='(service=org.osgi.service.packageadmin.PackageAdmin)' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.packageadmin.PackageAdmin</require>
    <require name='service' filter='(service=org.osgi.service.startlevel.StartLevel)' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.startlevel.StartLevel</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.dom))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.dom</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='false'>Import package javax.xml.transform.stream</require>
    <require name='package' filter='(&amp;(package=javax.xml.validation))' extend='false' multiple='false' optional='false'>Import package javax.xml.validation</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;version="[0.10,1)";status=provisional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.event;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.startlevel;version="[1.1,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.apache.karaf.features.management/2.2.4' symbolicname='org.apache.karaf.features.management' presentationname='Apache Karaf :: Features :: Management' uri='org.apache.karaf.features.management-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides MBeans to manipulate features via JMX.</description>
    <size>30481</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.features.management'/>
      <p n='presentationname' v='Apache Karaf :: Features :: Management'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.features.management.internal'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean,org.apache.karaf.features,javax.management,org.apache.karaf.features.management.codec,org.osgi.framework,org.apache.karaf.features.management'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.features.management'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.features.management.codec'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean,org.apache.karaf.features,org.apache.karaf.features.management'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='service' filter='(service=org.apache.karaf.features.FeaturesService)' extend='false' multiple='true' optional='false'>Import Service org.apache.karaf.features.FeaturesService</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=javax.management.openmbean))' extend='false' multiple='false' optional='false'>Import package javax.management.openmbean</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;version="[0.10,1)";status=provisional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.features)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.features;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.jaas.command/2.2.4' symbolicname='org.apache.karaf.jaas.command' presentationname='Apache Karaf :: Jaas :: Command' uri='org.apache.karaf.jaas.command-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides Karaf shell commands to manipulate JAAS security framework.</description>
    <size>26120</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.jaas.command'/>
      <p n='presentationname' v='Apache Karaf :: Jaas :: Command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.command'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.felix.service.command,org.apache.felix.gogo.commands,org.apache.karaf.jaas.modules,org.apache.karaf.shell.console,javax.security.auth.login,org.apache.karaf.jaas.config'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.jaas.config.JaasRealm)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.jaas.config.JaasRealm</require>
    <require name='service' filter='(service=org.apache.karaf.jaas.modules.BackingEngineFactory)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.jaas.modules.BackingEngineFactory</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.login))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.login</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.jaas.config)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.jaas.config;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.jaas.modules)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.jaas.modules;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.jaas.config/2.2.4' symbolicname='org.apache.karaf.jaas.config' presentationname='Apache Karaf :: JAAS :: Config' uri='org.apache.karaf.jaas.config-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides the configuration facility for the JAAS security framework.</description>
    <size>29980</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.jaas.config'/>
      <p n='presentationname' v='Apache Karaf :: JAAS :: Config'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
      <p n='osgi.service.blueprint.namespace' v=''/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.karaf.jaas.config.KeystoreManager'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.config'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.security.auth.login,javax.net.ssl'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.jaas.config.JaasRealm)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.jaas.config.JaasRealm</require>
    <require name='service' filter='(service=org.apache.karaf.jaas.config.KeystoreInstance)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.jaas.config.KeystoreInstance</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.login))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.login</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.blueprint;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.blueprint.mutable)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.blueprint.mutable;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.jaas.boot)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.jaas.boot;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.container;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.reflect;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
  </resource>
  <resource id='org.apache.karaf.jaas.modules/2.2.4' symbolicname='org.apache.karaf.jaas.modules' presentationname='Apache Karaf :: JAAS :: Modules' uri='org.apache.karaf.jaas.modules-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides JAAS modules which can be used in Karaf (LDAP, JDBC, etc).</description>
    <size>69279</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.jaas.modules'/>
      <p n='presentationname' v='Apache Karaf :: JAAS :: Modules'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.karaf.jaas.modules.BackingEngineFactory'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.karaf.jaas.modules.EncryptionService'/>
      <p n='name' v='basic'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.modules.properties'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.jaas.modules.encryption,org.apache.karaf.jaas.modules,org.slf4j,org.osgi.service.blueprint.container,javax.security.auth.callback,javax.security.auth.login,javax.security.auth'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.modules.jdbc'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.jaas.modules.encryption,javax.sql,org.apache.karaf.jaas.modules,org.slf4j,org.osgi.framework,javax.security.auth.callback,javax.security.auth.login,javax.security.auth,org.apache.karaf.jaas.modules.properties,javax.naming'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.modules.encryption'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.jaas.modules,org.slf4j,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.modules'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.security.auth.callback,org.apache.karaf.jaas.modules.encryption,javax.security.auth.spi,javax.security.auth.login,org.osgi.framework,javax.security.auth'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.modules.osgi'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.osgi.service.cm,javax.security.auth.callback,javax.security.auth.login,javax.security.auth,org.apache.karaf.jaas.modules'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.jaas.modules.ldap'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.net.ssl,javax.security.auth.callback,javax.naming,javax.security.auth.login,javax.security.auth,org.slf4j,javax.naming.directory,org.osgi.framework,org.apache.karaf.jaas.modules,org.apache.karaf.jaas.config'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='false'>Import package javax.naming</require>
    <require name='package' filter='(&amp;(package=javax.naming.directory))' extend='false' multiple='false' optional='false'>Import package javax.naming.directory</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='false'>Import package javax.security.auth</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.callback</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.login))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.login</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.spi))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.spi</require>
    <require name='package' filter='(&amp;(package=javax.sql))' extend='false' multiple='false' optional='false'>Import package javax.sql</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.blueprint.ext)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.blueprint.ext;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.jaas.config)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.jaas.config;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.container;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
  </resource>
  <resource id='org.apache.karaf.management.server/2.2.4' symbolicname='org.apache.karaf.management.server' presentationname='Apache Karaf :: Management' uri='org.apache.karaf.management.server-2.2.4.jar' version='2.2.4'>
    <description>This bundle starts the Karaf embedded MBean server and RMI registry allowing users to use JMX to manage Karaf.</description>
    <size>26134</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.server'/>
      <p n='presentationname' v='Apache Karaf :: Management'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='javax.management.MBeanServer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.remote,javax.net.ssl,javax.rmi.ssl,javax.management,org.apache.karaf.jaas.config,javax.security.auth.callback,javax.security.auth,javax.security.auth.login'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.jaas.config.KeystoreManager)' extend='false' multiple='true' optional='false'>Import Service org.apache.karaf.jaas.config.KeystoreManager</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.remote))' extend='false' multiple='false' optional='false'>Import package javax.management.remote</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.rmi.ssl))' extend='false' multiple='false' optional='false'>Import package javax.rmi.ssl</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='false'>Import package javax.security.auth</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.callback</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.login))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.login</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.jaas.config)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.jaas.config;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.management.mbeans.bundles/2.2.4' symbolicname='org.apache.karaf.management.mbeans.bundles' presentationname='Apache Karaf :: Management :: MBeans :: Bundles' uri='org.apache.karaf.management.mbeans.bundles-2.2.4.jar' version='2.2.4'>
    <description>The Bundles MBean bundle provides a JMX MBean to manipulate OSGi bundles.</description>
    <size>14616</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.mbeans.bundles'/>
      <p n='presentationname' v='Apache Karaf :: Management :: MBeans :: Bundles'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.bundles'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=javax.management.openmbean))' extend='false' multiple='false' optional='false'>Import package javax.management.openmbean</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.4))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version=2.2.4</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management.mbeans.bundles)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management.mbeans.bundles;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.startlevel;version="[1.1,2)"</require>
  </resource>
  <resource id='org.apache.karaf.management.mbeans.config/2.2.4' symbolicname='org.apache.karaf.management.mbeans.config' presentationname='Apache Karaf :: Management :: MBeans :: Config' uri='org.apache.karaf.management.mbeans.config-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides a JMX MBean to manipulate the Karaf ConfigAdmin layer.</description>
    <size>26517</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.mbeans.config'/>
      <p n='presentationname' v='Apache Karaf :: Management :: MBeans :: Config'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.config'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.config.internal'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.management.mbeans.config,org.osgi.service.cm,javax.management'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='service' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.cm.ConfigurationAdmin</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.4))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version=2.2.4</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,2)"</require>
  </resource>
  <resource id='org.apache.karaf.management.mbeans.dev/2.2.4' symbolicname='org.apache.karaf.management.mbeans.dev' presentationname='Apache Karaf :: Management :: MBeans :: Dev' uri='org.apache.karaf.management.mbeans.dev-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides a JMX MBean for dev utils actions.</description>
    <size>24366</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.mbeans.dev'/>
      <p n='presentationname' v='Apache Karaf :: Management :: MBeans :: Dev'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.dev'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.4))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version=2.2.4</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.management.mbeans.log/2.2.4' symbolicname='org.apache.karaf.management.mbeans.log' presentationname='Apache Karaf :: Management :: MBeans :: Log' uri='org.apache.karaf.management.mbeans.log-2.2.4.jar' version='2.2.4'>
    <description>The log mbean bundle provides a Log JMX MBean which allow you to manipulate the Karaf log layer.</description>
    <size>14277</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.mbeans.log'/>
      <p n='presentationname' v='Apache Karaf :: Management :: MBeans :: Log'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.log'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.4))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version=2.2.4</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging.spi)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging.spi;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,2)"</require>
  </resource>
  <resource id='org.apache.karaf.management.mbeans.packages/2.2.4' symbolicname='org.apache.karaf.management.mbeans.packages' presentationname='Apache Karaf :: Management :: MBeans :: Packages' uri='org.apache.karaf.management.mbeans.packages-2.2.4.jar' version='2.2.4'>
    <description>The Packages MBean bundle provides a Packages MBean to manipulate the PackageAdmin service.</description>
    <size>13067</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.mbeans.packages'/>
      <p n='presentationname' v='Apache Karaf :: Management :: MBeans :: Packages'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.packages'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.4))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version=2.2.4</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
  </resource>
  <resource id='org.apache.karaf.management.mbeans.services/2.2.4' symbolicname='org.apache.karaf.management.mbeans.services' presentationname='Apache Karaf :: Management :: MBeans :: Services' uri='org.apache.karaf.management.mbeans.services-2.2.4.jar' version='2.2.4'>
    <description>The Services MBean bundle provides a JMX MBean to manipulate the OSGi services.</description>
    <size>13490</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.mbeans.services'/>
      <p n='presentationname' v='Apache Karaf :: Management :: MBeans :: Services'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.services'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.management.openmbean'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=javax.management.openmbean))' extend='false' multiple='false' optional='false'>Import package javax.management.openmbean</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.4))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version=2.2.4</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.management.mbeans.system/2.2.4' symbolicname='org.apache.karaf.management.mbeans.system' presentationname='Apache Karaf :: Management :: MBeans :: System' uri='org.apache.karaf.management.mbeans.system-2.2.4.jar' version='2.2.4'>
    <description>The System MBean bundle provides a JMX MBean to manipulate the Karaf system container.</description>
    <size>11934</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.management.mbeans.system'/>
      <p n='presentationname' v='Apache Karaf :: Management :: MBeans :: System'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.management.mbeans.system'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <require name='service' filter='(service=javax.management.MBeanServer)' extend='false' multiple='true' optional='false'>Import Service javax.management.MBeanServer</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='false'>Import package javax.management</require>
    <require name='package' filter='(&amp;(package=javax.management.loading))' extend='false' multiple='false' optional='false'>Import package javax.management.loading</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.management)(version&gt;=2.2.4))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.management;version=2.2.4</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
  </resource>
  <resource id='org.apache.karaf.shell.config/2.2.4' symbolicname='org.apache.karaf.shell.config' presentationname='Apache Karaf :: Shell :: ConfigAdmin Commands' uri='org.apache.karaf.shell.config-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides Karaf shell commands to manipulate the ConfigAdmin service.</description>
    <size>42298</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.config'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: ConfigAdmin Commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.cm.ConfigurationListener'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.config'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.felix.service.command,org.apache.felix.gogo.commands,org.osgi.service.cm,org.apache.karaf.shell.console,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.config.completers'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.console,org.osgi.service.cm,org.apache.karaf.shell.console.completer'/>
    </capability>
    <require name='service' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.cm.ConfigurationAdmin</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console.completer)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console.completer;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,2)"</require>
  </resource>
  <resource id='org.apache.karaf.shell.console/2.2.4' symbolicname='org.apache.karaf.shell.console' presentationname='Apache Karaf :: Shell :: Console' uri='org.apache.karaf.shell.console-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides OSGi shell integration and console support.</description>
    <size>347546</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.console'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: Console'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
      <p n='osgi.service.blueprint.namespace' v='http://karaf.apache.org/xmlns/shell/v1.0.0'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.felix.service.command.CommandProcessor'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.felix.service.command.Converter'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.felix.service.command.Function'/>
      <p n='osgi.command.scope' v='*'/>
      <p n='osgi.command.function' v='help'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.felix.service.threadio.ThreadIO'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.runtime.threadio'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='uses:' v='org.apache.felix.service.threadio'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.api'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='uses:' v='org.apache.felix.service.command'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.commands'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='uses:' v='org.apache.felix.service.command,org.fusesource.jansi'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.commands.converter'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.runtime.activator'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='uses:' v='org.apache.felix.service.command,org.osgi.util.tracker,org.osgi.framework,org.apache.felix.gogo.runtime,org.apache.felix.gogo.api,org.apache.felix.gogo.runtime.threadio,org.apache.felix.service.threadio,org.osgi.service.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.commands.basic'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='uses:' v='org.apache.felix.service.command,org.apache.felix.gogo.commands,org.fusesource.jansi,org.apache.karaf.shell.console,org.apache.felix.gogo.commands.converter,jline,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.gogo.runtime'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='uses:' v='org.apache.felix.service.command,org.apache.felix.gogo.api,org.apache.felix.service.threadio,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.service.command'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='status' v='provisional'/>
      <p n='mandatory:' v='status'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.service.threadio'/>
      <p n='version' t='version' v='0.10.0'/>
      <p n='status' v='provisional'/>
      <p n='mandatory:' v='status'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.console.jline'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.fusesource.jansi,org.osgi.framework,org.apache.felix.gogo.runtime.activator,org.apache.karaf.shell.console,jline.console.completer,jline,jline.console,org.apache.felix.service.command,jline.console.history,org.apache.felix.gogo.commands,org.slf4j,org.apache.karaf.shell.console.completer,org.apache.felix.gogo.runtime,javax.security.auth,org.apache.karaf.jaas.modules'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.console'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.felix.service.command,org.apache.felix.gogo.commands,org.slf4j,org.osgi.service.blueprint.container,org.osgi.framework,org.osgi.service.startlevel,org.fusesource.jansi,jline,org.apache.felix.gogo.commands.basic,org.apache.felix.service.threadio,org.apache.felix.gogo.runtime,org.apache.karaf.shell.console.jline,org.apache.felix.gogo.runtime.threadio'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.console.commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.felix.service.command,org.apache.felix.gogo.commands.basic,org.apache.felix.gogo.commands,org.osgi.service.blueprint.container,org.apache.karaf.shell.console,org.osgi.framework,org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.mutable,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.console.completer'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.console,org.apache.felix.service.command,org.apache.felix.gogo.commands.basic,org.apache.felix.gogo.commands,org.slf4j,org.osgi.framework,org.apache.felix.gogo.runtime,jline.console.completer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.jansi'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='jline.console.history'/>
      <p n='version' t='version' v='2.5.0'/>
      <p n='uses:' v='jline.internal'/>
    </capability>
    <capability name='package'>
      <p n='package' v='jline'/>
      <p n='version' t='version' v='2.5.0'/>
      <p n='uses:' v='org.fusesource.jansi,jline.internal,jline.console'/>
    </capability>
    <capability name='package'>
      <p n='package' v='jline.console.completer'/>
      <p n='version' t='version' v='2.5.0'/>
      <p n='uses:' v='jline.internal,jline.console'/>
    </capability>
    <capability name='package'>
      <p n='package' v='jline.console'/>
      <p n='version' t='version' v='2.5.0'/>
      <p n='uses:' v='org.fusesource.jansi,jline,jline.console.completer,jline.console.history,jline.internal'/>
    </capability>
    <capability name='package'>
      <p n='package' v='jline.internal'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtjni.runtime'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require name='service' filter='(service=org.apache.felix.service.command.CommandProcessor)' extend='false' multiple='true' optional='false'>Import Service org.apache.felix.service.command.CommandProcessor</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='false'>Import package javax.security.auth</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.blueprint;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.aries.blueprint.mutable)(version&gt;=0.3.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.aries.blueprint.mutable;version="[0.3,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.branding))' extend='false' multiple='false' optional='true'>Import package org.apache.karaf.branding;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.jaas.modules)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.jaas.modules;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.fusesource.hawtjni.runtime)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.fusesource.hawtjni.runtime;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.container;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.reflect;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.event;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.startlevel;version="[1.1,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.slf4j;resolution:=optional;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
  </resource>
  <resource id='org.apache.karaf.shell.dev/2.2.4' symbolicname='org.apache.karaf.shell.dev' presentationname='Apache Karaf :: Shell :: Development Commands' uri='org.apache.karaf.shell.dev-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides Karaf shell commands aim to help the developer.</description>
    <size>159247</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.dev'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: Development Commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.dev'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.console,org.osgi.framework,org.apache.felix.gogo.commands,org.osgi.service.packageadmin,org.slf4j,org.apache.karaf.shell.dev.framework,org.apache.felix.service.command,org.apache.karaf.shell.dev.util,org.apache.karaf.shell.dev.watch'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.dev.util'/>
      <p n='version' t='version' v='2.2.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.dev.framework'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.dev.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.dev.watch'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.slf4j,org.osgi.framework,org.osgi.service.cm'/>
    </capability>
    <require name='service' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' extend='false' multiple='true' optional='false'>Import Service org.osgi.service.cm.ConfigurationAdmin</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.apache.karaf.shell.log/2.2.4' symbolicname='org.apache.karaf.shell.log' presentationname='Apache Karaf :: Shell :: Log Commands' uri='org.apache.karaf.shell.log-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides Karaf shell commands to manipulate Log service.</description>
    <size>45660</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.log'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: Log Commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.ops4j.pax.logging.spi.PaxAppender'/>
      <p n='org.ops4j.pax.logging.appender.name' v='VmLogAppender'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.log'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.console,org.apache.felix.gogo.commands,org.ops4j.pax.logging.spi,org.apache.karaf.shell.log.layout,org.osgi.framework,org.osgi.service.cm'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.log.layout'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.ops4j.pax.logging.spi,org.apache.log4j.spi'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.log.completers'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.log,org.apache.karaf.shell.console.completer'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;version="[0.10,1)";status=provisional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console.completer)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console.completer;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.log4j.spi)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.log4j.spi;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging.spi)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging.spi;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.3,2)"</require>
  </resource>
  <resource id='org.apache.karaf.shell.osgi/2.2.4' symbolicname='org.apache.karaf.shell.osgi' presentationname='Apache Karaf :: Shell :: OSGi Commands' uri='org.apache.karaf.shell.osgi-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides the low level OSGi Karaf shell commands.</description>
    <size>88053</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.osgi'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: OSGi Commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.blueprint.container.BlueprintListener'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.osgi'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.osgi.framework,org.osgi.service.blueprint.container,org.slf4j,org.apache.felix.service.command,org.apache.karaf.shell.console,org.apache.felix.gogo.commands,org.osgi.service.startlevel,org.fusesource.jansi,jline,org.osgi.service.packageadmin,org.springframework.osgi.extender.event,org.springframework.osgi.service.importer.event,org.springframework.osgi.context.event'/>
    </capability>
    <require name='package' filter='(&amp;(package=jline)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package jline;version="[2.5,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.fusesource.jansi)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.fusesource.jansi;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.container;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.startlevel;version="[1.1,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.context.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.context.event;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.extender.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.extender.event;resolution:=optional;version="[1.2,2)"</require>
    <require name='package' filter='(&amp;(package=org.springframework.osgi.service.importer.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.springframework.osgi.service.importer.event;resolution:=optional;version="[1.2,2)"</require>
  </resource>
  <resource id='org.apache.karaf.shell.packages/2.2.4' symbolicname='org.apache.karaf.shell.packages' presentationname='Apache Karaf :: Shell :: PackageAdmin Commands' uri='org.apache.karaf.shell.packages-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides Karaf shell commands to manipulate the PackageAdmin service.</description>
    <size>17707</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.packages'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: PackageAdmin Commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.packages'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.osgi.framework,org.apache.felix.gogo.commands,org.osgi.service.packageadmin,org.apache.karaf.shell.console'/>
    </capability>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;version="[0.10,1)";status=provisional</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.packageadmin;version="[1.2,2)"</require>
  </resource>
  <resource id='org.apache.karaf.shell.ssh/2.2.4' symbolicname='org.apache.karaf.shell.ssh' presentationname='Apache Karaf :: Shell :: SSH' uri='org.apache.karaf.shell.ssh-2.2.4.jar' version='2.2.4'>
    <description>This bundle provides SSH support to the Karaf console.</description>
    <size>39199</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.ssh'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: SSH'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.ssh'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='javax.security.auth.callback,org.apache.sshd.server.session,org.apache.sshd.common,javax.security.auth.login,org.apache.sshd.server,javax.security.auth,org.slf4j,org.apache.felix.service.command,org.osgi.service.blueprint.container,jline,org.apache.karaf.shell.console.jline,org.apache.karaf.shell.console,org.apache.felix.gogo.commands,org.apache.sshd.client.future,org.apache.sshd.client.channel,org.apache.sshd.common.future,org.apache.sshd.common.util,org.apache.sshd,jline.console,jline.internal'/>
    </capability>
    <require name='service' filter='(service=org.apache.felix.service.command.CommandProcessor)' extend='false' multiple='true' optional='false'>Import Service org.apache.felix.service.command.CommandProcessor</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='false'>Import package javax.security.auth</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.callback</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.login))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.login</require>
    <require name='package' filter='(&amp;(package=jline)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package jline;version="[2.5,3)"</require>
    <require name='package' filter='(&amp;(package=jline.console)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package jline.console;version="[2.5,3)"</require>
    <require name='package' filter='(&amp;(package=jline.internal)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package jline.internal;version="[2.5,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console.jline)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console.jline;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.client.channel)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.client.channel;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.client.future)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.client.future;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.common)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.common;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.common.future)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.common.future;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.common.util)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.common.util;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.server)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.server;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.server.jaas)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.server.jaas;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.server.keyprovider)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.server.keyprovider;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.sshd.server.session)(version&gt;=0.5.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.sshd.server.session;version="[0.5,1)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint.container;version="[1.0,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
  </resource>
  <resource id='org.apache.karaf.shell.commands/2.2.4' symbolicname='org.apache.karaf.shell.commands' presentationname='Apache Karaf :: Shell :: Various Commands' uri='org.apache.karaf.shell.commands-2.2.4.jar' version='2.2.4'>
    <description>This bundles provides basic Karaf shell commands.</description>
    <size>67838</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.karaf.shell.commands'/>
      <p n='presentationname' v='Apache Karaf :: Shell :: Various Commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.commands'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.apache.karaf.shell.console,org.apache.felix.gogo.commands,org.slf4j,org.apache.felix.service.command,org.fusesource.jansi,jline.console.history,org.osgi.framework,org.apache.karaf.shell.commands.info,jline,org.apache.felix.gogo.commands.converter'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.karaf.shell.commands.info'/>
      <p n='version' t='version' v='2.2.4'/>
      <p n='uses:' v='org.osgi.util.tracker,org.osgi.framework,org.slf4j'/>
    </capability>
    <require name='service' filter='(service=org.apache.karaf.shell.commands.info.InfoProvider)' extend='false' multiple='true' optional='true'>Import Service org.apache.karaf.shell.commands.info.InfoProvider</require>
    <require name='package' filter='(&amp;(package=jline)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package jline;version="[2.5,3)"</require>
    <require name='package' filter='(&amp;(package=jline.console.history)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package jline.console.history;version="[2.5,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.gogo.commands.converter)(version&gt;=0.10.0)(!(version&gt;=1.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.gogo.commands.converter;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=0.10.0)(!(version&gt;=1.0.0))(status=provisional)(mandatory:&lt;*status))' extend='false' multiple='false' optional='false'>Import package org.apache.felix.service.command;status=provisional;version="[0.10,1)"</require>
    <require name='package' filter='(&amp;(package=org.apache.karaf.shell.console)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.karaf.shell.console;version="[2.2,3)"</require>
    <require name='package' filter='(&amp;(package=org.fusesource.jansi)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.fusesource.jansi;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.5,2)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.blueprint;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.4,2)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.6,2)"</require>
  </resource>
  <resource id='org.apache.mina.core/2.0.1' symbolicname='org.apache.mina.core' presentationname='Apache MINA Core' uri='mina-core-2.0.1.jar' version='2.0.1'>
    <description>Apache MINA is a network application framework which helps users develop high performance and highly scalable network applications easily.  It provides an abstract event-driven asynchronous API over various transports such as TCP/IP and UDP/IP via Java NIO.</description>
    <size>641045</size>
    <documentation>http://mina.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.mina.core'/>
      <p n='presentationname' v='Apache MINA Core'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.handlers.http.ntlm'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.proxy.session,javax.crypto,org.slf4j,org.apache.mina.proxy,javax.crypto.spec,org.apache.mina.proxy.handlers,org.apache.mina.core.filterchain,org.apache.mina.proxy.handlers.http,org.apache.mina.util,org.apache.mina.proxy.utils'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.future'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.polling,org.apache.mina.core.session,org.apache.mina.core.service,org.apache.mina.util,org.apache.mina.core'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.codec.demux'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.util,org.apache.mina.filter.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.handler.demux'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.service,org.apache.mina.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.buffer'/>
      <p n='version' t='version' v='2.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.keepalive'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.filterchain,org.slf4j,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.util.byteaccess'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.buffer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.handler.stream'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.service,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.transport.vmpipe'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.buffer,org.apache.mina.core.write,org.apache.mina.core.session,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.apache.mina.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.handler.multiton'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.stream'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.file,org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.filterchain,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.executor'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.filterchain,org.slf4j,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.errorgenerating'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.future,org.apache.mina.core.buffer,org.apache.mina.core.filterchain,org.apache.mina.core.write,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.codec'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.file,org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.slf4j,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.util'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.filterchain,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.statistic'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.filterchain,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.polling'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.buffer,org.apache.mina.core,org.slf4j,org.apache.mina.core.write,org.apache.mina.core.file,org.apache.mina.core.session,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.apache.mina.util,org.apache.mina.transport.socket'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.handler.chain'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.service'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.handlers'/>
      <p n='version' t='version' v='2.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.filterchain'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.service,org.slf4j,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.buffer'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.filterchain,org.apache.mina.util,org.apache.mina.core.write,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.service'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core,org.slf4j,org.apache.mina.core.write,org.apache.mina.core.session,org.apache.mina.core.filterchain,org.apache.mina.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.handlers.http'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.proxy.handlers.http.ntlm,org.apache.mina.core.future,org.apache.mina.core.buffer,org.apache.mina.proxy.session,org.apache.mina.proxy.handlers.http.digest,org.slf4j,org.apache.mina.proxy,org.apache.mina.core.session,org.apache.mina.proxy.handlers,org.apache.mina.core.filterchain,org.apache.mina.proxy.handlers.http.basic,org.apache.mina.proxy.utils'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.handlers.http.basic'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.proxy.handlers,org.apache.mina.core.filterchain,org.apache.mina.proxy.handlers.http,org.apache.mina.util,org.apache.mina.proxy.utils,org.apache.mina.proxy.session,org.slf4j,org.apache.mina.proxy'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.transport.socket.nio'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.buffer,org.apache.mina.core,org.apache.mina.core.session,org.apache.mina.core.polling,org.apache.mina.core.file,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.apache.mina.transport.socket'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.codec.serialization'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.filter.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.codec.prefixedstring'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.filter.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.filter'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.buffer,org.apache.mina.proxy.session,org.apache.mina.core.write,org.slf4j,org.apache.mina.proxy,org.apache.mina.core.session,org.apache.mina.proxy.handlers,org.apache.mina.proxy.handlers.socks,org.apache.mina.core.filterchain,org.apache.mina.proxy.handlers.http,org.apache.mina.proxy.event'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.firewall'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.future,org.apache.mina.core.filterchain,org.slf4j,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.core.buffer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.session'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.proxy.filter,org.apache.mina.core.session,org.apache.mina.proxy.handlers,org.apache.mina.proxy.event,org.apache.mina.proxy'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.handlers.http.digest'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='javax.security.sasl,org.apache.mina.proxy.session,org.slf4j,org.apache.mina.proxy,org.apache.mina.core.session,org.apache.mina.proxy.handlers,org.apache.mina.core.filterchain,org.apache.mina.proxy.handlers.http,org.apache.mina.util,org.apache.mina.proxy.utils'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.write'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.session,org.apache.mina.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='javax.security.sasl,org.apache.mina.core.future,org.apache.mina.proxy.filter,org.apache.mina.core.buffer,org.apache.mina.proxy.session,org.apache.mina.core.write,org.slf4j,org.apache.mina.core.file,org.apache.mina.core.session,org.apache.mina.proxy.handlers,org.apache.mina.proxy.handlers.socks,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.apache.mina.proxy.event,org.apache.mina.transport.socket'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.ssl'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.buffer,org.slf4j,org.apache.mina.core.write,org.apache.mina.core.session,org.apache.mina.core.filterchain,org.apache.mina.core.service,javax.net.ssl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.session'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.buffer,org.apache.mina.core.write,org.apache.mina.core.file,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.apache.mina.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.core.file'/>
      <p n='version' t='version' v='2.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.codec.statemachine'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.filterchain,org.slf4j,org.apache.mina.filter.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.reqres'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.filter.util,org.apache.mina.core.session,org.apache.mina.core.filterchain,org.slf4j,org.apache.mina.core.write'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.handlers.socks'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.mina.core.buffer,org.apache.mina.proxy.session,org.ietf.jgss,org.slf4j,org.apache.mina.proxy,org.apache.mina.core.session,org.apache.mina.proxy.handlers,org.apache.mina.core.filterchain,org.apache.mina.proxy.utils'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.event'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.proxy.handlers,org.apache.mina.proxy.handlers.socks,org.apache.mina.core.filterchain,org.apache.mina.proxy.session,org.slf4j,org.apache.mina.proxy'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.util'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.proxy.utils'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='javax.security.sasl,org.apache.mina.core.buffer'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.codec.textline'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.filter.codec'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.filter.logging'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.filter.util,org.apache.mina.core.session,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.apache.mina.core.write,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.mina.transport.socket'/>
      <p n='version' t='version' v='2.0.1'/>
      <p n='uses:' v='org.apache.mina.core.session,org.apache.mina.core.service'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='false'>Import package javax.crypto</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='false'>Import package javax.crypto.spec</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.security.sasl))' extend='false' multiple='false' optional='false'>Import package javax.security.sasl</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.buffer)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.buffer;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.file)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.file;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.filterchain)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.filterchain;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.future)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.future;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.polling)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.polling;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.service)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.service;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.session)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.session;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.write)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.write;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.buffer)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.buffer;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.codec)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.codec;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.codec.demux)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.codec.demux;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.codec.prefixedstring)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.codec.prefixedstring;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.codec.serialization)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.codec.serialization;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.codec.statemachine)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.codec.statemachine;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.codec.textline)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.codec.textline;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.errorgenerating)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.errorgenerating;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.executor)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.executor;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.firewall)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.firewall;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.keepalive)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.keepalive;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.logging)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.logging;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.reqres)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.reqres;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.ssl)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.ssl;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.statistic)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.statistic;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.stream)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.stream;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.util)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.util;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.handler.chain)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.handler.chain;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.handler.demux)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.handler.demux;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.handler.multiton)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.handler.multiton;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.handler.stream)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.handler.stream;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.event)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.event;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.filter)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.filter;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.handlers)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.handlers;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.handlers.http)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.handlers.http;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.handlers.http.basic)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.handlers.http.basic;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.handlers.http.digest)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.handlers.http.digest;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.handlers.http.ntlm)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.handlers.http.ntlm;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.handlers.socks)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.handlers.socks;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.session)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.session;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.proxy.utils)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.proxy.utils;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.transport.socket)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.transport.socket;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.transport.socket.nio)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.transport.socket.nio;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.transport.vmpipe)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.transport.vmpipe;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.util)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.util;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.util.byteaccess)(version&gt;=2.0.1))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.util.byteaccess;version=2.0.1</require>
    <require name='package' filter='(&amp;(package=org.ietf.jgss))' extend='false' multiple='false' optional='false'>Import package org.ietf.jgss</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version=1.5</require>
  </resource>
  <resource id='sshd-core/0.5.0' symbolicname='sshd-core' presentationname='Apache Mina SSHD :: Core' uri='sshd-core-0.5.0.jar' version='0.5.0'>
    <description>The Apache Software Foundation provides support for the Apache community of open-source software projects.    The Apache projects are characterized by a collaborative, consensus based development process, an open and    pragmatic software license, and a desire to create high quality software that leads the way in its field.    We consider ourselves not simply a group of projects sharing a server, but rather a community of developers    and users.</description>
    <size>310153</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0</license>
    <capability name='bundle'>
      <p n='symbolicname' v='sshd-core'/>
      <p n='presentationname' v='Apache Mina SSHD :: Core'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.slf4j,org.apache.sshd.common.future,org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.service,org.apache.sshd.common.session,org.apache.sshd.common.util,org.apache.sshd.client.future,org.apache.sshd.common.channel,org.apache.mina.core.future'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.keyprovider'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common,org.apache.sshd.common.util,org.bouncycastle.openssl,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.kex'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='javax.crypto.interfaces,org.apache.sshd.common.util,javax.crypto.spec,javax.crypto'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.session'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.future,org.apache.mina.core.future,org.apache.mina.core.session,org.slf4j,org.apache.sshd.common,org.apache.mina.core.buffer,org.apache.sshd.client.channel,org.apache.sshd.common.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.client.future'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.future,org.apache.sshd,org.apache.sshd.common'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.future'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.mina.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.client.keyverifier'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.util,org.apache.sshd.client,org.apache.sshd,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.channel'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.sshd.common.util,org.apache.sshd.common,org.apache.sshd.client.future,org.slf4j,org.apache.sshd.common.channel,org.apache.mina.core.session,org.apache.mina.core.buffer,org.apache.mina.core.service,org.apache.sshd.common.future,org.apache.sshd.server,org.apache.mina.transport.socket.nio,org.apache.sshd.server.session'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.filesystem'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.server,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.shell'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.server,org.apache.sshd.common.util,org.slf4j,org.apache.sshd.common'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.agent'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.util,org.apache.sshd.common,org.apache.tomcat.jni,org.apache.sshd.common.future,org.apache.sshd.server.session,org.apache.sshd.client.future,org.slf4j,org.apache.sshd.common.channel,org.apache.sshd.client.channel,org.apache.sshd.common.signature,org.apache.mina.core.future,org.apache.sshd.server.channel'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.kex'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.sshd.common.util,org.apache.sshd.common,org.apache.sshd.common.kex,org.apache.sshd.common.session,org.apache.sshd.server.session,org.apache.sshd.common.digest,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.client.session'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.future,org.apache.mina.core.future,org.apache.sshd.common.util,org.apache.sshd.server.channel,org.apache.sshd.common,org.apache.sshd.client.future,org.apache.sshd.common.channel,org.apache.sshd.client,org.apache.sshd.common.session,org.apache.sshd.client.channel,org.slf4j,org.apache.mina.core.session,org.apache.sshd,org.apache.sshd.client.auth'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.command'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.util,org.apache.sshd.server,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.random'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common,org.bouncycastle.crypto.prng'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.client.auth'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.sshd.common,org.slf4j,org.apache.sshd.common.util,org.apache.sshd.client,org.apache.sshd.agent,org.apache.sshd.client.session'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.compression'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common,org.apache.sshd.common.util,com.jcraft.jzlib'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.signature'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.util,org.apache.sshd.common'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.cipher'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common,org.apache.sshd.common.util,javax.crypto.spec,javax.crypto'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.auth'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common,org.apache.sshd.server,org.apache.sshd.common.util,org.apache.sshd.server.session,org.apache.mina.core.future'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.client.channel'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.future,org.apache.sshd.client.future,org.apache.mina.core.future,org.apache.sshd.common.util,org.apache.sshd.common,org.apache.sshd,org.apache.sshd.common.channel,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.util'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common,org.apache.mina.core.buffer,org.slf4j,org.bouncycastle.jce.provider,javax.crypto'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.keyprovider'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.util,org.apache.sshd.common.keyprovider,org.slf4j,org.bouncycastle.openssl'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.mac'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.util,javax.crypto.spec,org.apache.sshd.common,javax.crypto'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.x11'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.sshd.common,org.apache.mina.core.buffer,org.apache.sshd.client.future,org.apache.sshd.client.channel,org.slf4j,org.apache.sshd.common.future,org.apache.sshd.common.util,org.apache.mina.core.session,org.apache.sshd.common.channel,org.apache.mina.filter.executor,org.apache.mina.core.filterchain,org.apache.mina.core.service,org.apache.sshd.server.session,org.apache.mina.transport.socket.nio'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.jaas'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='javax.security.auth.callback,javax.security.auth.login,org.apache.sshd.server,org.apache.sshd.server.session,javax.security.auth'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.client.kex'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.mina.core.future,org.apache.sshd.common.util,org.apache.sshd.common,org.apache.sshd.common.kex,org.apache.sshd.common.session,org.apache.sshd.client.session,org.apache.sshd.common.digest,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.server.session,org.apache.sshd.common,org.apache.sshd.common.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.client'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common,org.apache.sshd,org.apache.mina.core.session,org.apache.sshd.common.session,org.apache.sshd.client.session,org.apache.sshd.common.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.sftp'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.server,org.apache.sshd.common,org.apache.sshd.common.util,org.apache.sshd.server.session,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.server.session'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.future,org.apache.mina.core.future,org.apache.sshd.common.util,org.apache.sshd.server.channel,org.apache.sshd.common,org.apache.sshd.client.future,org.apache.sshd.common.channel,org.apache.sshd.common.session,org.slf4j,org.apache.mina.core.session,org.apache.sshd.server.x11,org.apache.mina.core.service,org.apache.sshd.server,org.apache.sshd.agent,org.apache.sshd,org.apache.mina.core.buffer,org.apache.sshd.client.channel,org.apache.mina.filter.executor,org.apache.mina.core.filterchain,org.apache.mina.transport.socket.nio'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.digest'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.util,org.apache.sshd.common'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.future,org.apache.sshd.client.future,org.apache.sshd.client.channel,org.apache.mina.core.session,org.apache.mina.core.future,org.apache.sshd.common.session,org.apache.sshd.client.session,org.apache.sshd.common,org.apache.sshd.common.compression,org.apache.sshd.common.cipher,org.apache.sshd.common.signature,org.apache.sshd.common.util,org.apache.sshd.common.mac,org.apache.sshd.client.kex,org.apache.mina.core.service,org.apache.sshd.client,org.apache.sshd.agent,org.apache.mina.transport.socket.nio,org.apache.sshd.common.random,org.apache.sshd.server,org.apache.sshd.server.session,org.apache.sshd.server.channel,org.apache.sshd.server.shell,org.apache.sshd.server.filesystem,org.apache.sshd.server.kex,org.apache.sshd.server.auth,org.slf4j,org.apache.sshd.server.keyprovider,org.apache.mina.transport.socket'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.sshd.common.channel'/>
      <p n='version' t='version' v='0.5.0'/>
      <p n='uses:' v='org.apache.sshd.common.future,org.apache.mina.core.future,org.apache.sshd.common.util,org.apache.sshd.common,org.slf4j'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.jcraft.jzlib))' extend='false' multiple='false' optional='true'>Import package com.jcraft.jzlib;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.crypto))' extend='false' multiple='false' optional='false'>Import package javax.crypto</require>
    <require name='package' filter='(&amp;(package=javax.crypto.interfaces))' extend='false' multiple='false' optional='false'>Import package javax.crypto.interfaces</require>
    <require name='package' filter='(&amp;(package=javax.crypto.spec))' extend='false' multiple='false' optional='false'>Import package javax.crypto.spec</require>
    <require name='package' filter='(&amp;(package=javax.security.auth))' extend='false' multiple='false' optional='false'>Import package javax.security.auth</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.callback))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.callback</require>
    <require name='package' filter='(&amp;(package=javax.security.auth.login))' extend='false' multiple='false' optional='false'>Import package javax.security.auth.login</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.buffer)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.buffer;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.filterchain)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.filterchain;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.future)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.future;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.service)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.service;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.core.session)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.core.session;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.filter.executor)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.filter.executor;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.transport.socket)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.transport.socket;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.transport.socket.nio)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.transport.socket.nio;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.mina.util)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' extend='false' multiple='false' optional='false'>Import package org.apache.mina.util;version="[2.0,3)"</require>
    <require name='package' filter='(&amp;(package=org.apache.tomcat.jni))' extend='false' multiple='false' optional='true'>Import package org.apache.tomcat.jni;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.bouncycastle.crypto.prng))' extend='false' multiple='false' optional='true'>Import package org.bouncycastle.crypto.prng;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.bouncycastle.jce.provider))' extend='false' multiple='false' optional='true'>Import package org.bouncycastle.jce.provider;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.bouncycastle.openssl))' extend='false' multiple='false' optional='true'>Import package org.bouncycastle.openssl;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version="[1.5,2)"</require>
  </resource>
  <resource id='org.apache.servicemix.bundles.asm/3.3.0.2' symbolicname='org.apache.servicemix.bundles.asm' presentationname='Apache ServiceMix :: Bundles :: asm' uri='org.apache.servicemix.bundles.asm-3.3_2.jar' version='3.3.0.2'>
    <description>This OSGi bundle wraps asm-all 3.3 jar file.</description>
    <size>218473</size>
    <documentation>http://www.apache.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.apache.servicemix.bundles.asm'/>
      <p n='presentationname' v='Apache ServiceMix :: Bundles :: asm'/>
      <p n='version' t='version' v='3.3.0.2'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.util'/>
      <p n='version' t='version' v='3.3.0'/>
      <p n='uses:' v='org.objectweb.asm,org.objectweb.asm.tree,org.objectweb.asm.tree.analysis,org.objectweb.asm.signature'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm'/>
      <p n='version' t='version' v='3.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.commons'/>
      <p n='version' t='version' v='3.3.0'/>
      <p n='uses:' v='org.objectweb.asm,org.objectweb.asm.tree,org.objectweb.asm.signature'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.xml'/>
      <p n='version' t='version' v='3.3.0'/>
      <p n='uses:' v='org.objectweb.asm,org.xml.sax,org.xml.sax.helpers,org.xml.sax.ext,javax.xml.transform,javax.xml.transform.sax,javax.xml.transform.stream,org.objectweb.asm.util'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.signature'/>
      <p n='version' t='version' v='3.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree'/>
      <p n='version' t='version' v='3.3.0'/>
      <p n='uses:' v='org.objectweb.asm'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree.analysis'/>
      <p n='version' t='version' v='3.3.0'/>
      <p n='uses:' v='org.objectweb.asm,org.objectweb.asm.tree'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.sax))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.ext))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.ext;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.helpers))' extend='false' multiple='false' optional='true'>Import package org.xml.sax.helpers;resolution:=optional</require>
  </resource>
  <resource id='org.ops4j.pax.logging.pax-logging-api/1.6.3' symbolicname='org.ops4j.pax.logging.pax-logging-api' presentationname='OPS4J Pax Logging - API' uri='pax-logging-api-1.6.3.jar' version='1.6.3'>
    <description>The Pax Logging API Library is to allow for the Pax Logging Service to be reloaded without stopping the many    dependent bundles. It also contains the OSGi Log Service API and the Knopflerfish Log API.</description>
    <size>96342</size>
    <documentation>http://www.ops4j.org/projects/pax/logging/pax-logging-api</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.html</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.ops4j.pax.logging.pax-logging-api'/>
      <p n='presentationname' v='OPS4J Pax Logging - API'/>
      <p n='version' t='version' v='1.6.3'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.avalon.framework.logger'/>
      <p n='version' t='version' v='4.3.0'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.apache.log'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.1.1'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.ops4j.pax.logging,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.0.4'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='version' t='version' v='1.1.1'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.apache.commons.logging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='version' t='version' v='1.0.4'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.juli.logging'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.ops4j.pax.logging,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j'/>
      <p n='version' t='version' v='1.2.15'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.ops4j.pax.logging,org.osgi.framework,org.apache.log4j.spi'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.spi'/>
      <p n='version' t='version' v='1.2.15'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.apache.log4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.xml'/>
      <p n='version' t='version' v='1.2.15'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='javax.xml.parsers,org.w3c.dom'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.knopflerfish.service.log'/>
      <p n='version' t='version' v='1.1.0'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.osgi.service.log,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.logging'/>
      <p n='version' t='version' v='1.6.3'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.osgi.service.log,org.osgi.framework,org.osgi.util.tracker,org.knopflerfish.service.log'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.logging.avalon'/>
      <p n='version' t='version' v='1.6.3'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.ops4j.pax.logging,org.osgi.framework,org.apache.avalon.framework.logger'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.logging.slf4j'/>
      <p n='version' t='version' v='1.6.3'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.slf4j.spi,org.ops4j.pax.logging,org.slf4j.helpers,org.slf4j,org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='version' t='version' v='1.3.0'/>
      <p n='uses:' v='org.osgi.framework'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='version' t='version' v='1.6.1'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.slf4j.helpers,org.slf4j.spi'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='version' t='version' v='1.5.11'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='version' t='version' v='1.4.3'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='version' t='version' v='1.6.1'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.slf4j.spi,org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='version' t='version' v='1.5.11'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='version' t='version' v='1.4.3'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='version' t='version' v='1.6.1'/>
      <p n='provider' v='paxlogging'/>
      <p n='uses:' v='org.slf4j'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='version' t='version' v='1.5.11'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='version' t='version' v='1.4.3'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.log))' extend='false' multiple='false' optional='true'>Import package org.apache.log;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging)(version&gt;=0.9.5)(!(version&gt;=2.0.0))(provider=paxlogging)(mandatory:&lt;*provider))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging;provider=paxlogging;version="[0.9.5,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging.avalon)(version&gt;=0.9.5)(!(version&gt;=2.0.0))(provider=paxlogging)(mandatory:&lt;*provider))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging.avalon;provider=paxlogging;version="[0.9.5,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.event;resolution:=optional;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.log;version="[1.3.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
  </resource>
  <resource id='org.ops4j.pax.logging.pax-logging-service/1.6.3' symbolicname='org.ops4j.pax.logging.pax-logging-service' presentationname='OPS4J Pax Logging - Service' uri='pax-logging-service-1.6.3.jar' version='1.6.3'>
    <description>Pax Logging Service is a Log4J driven service that supports Jakarta Commons Logging,    Log4J, Avalon Logging, SLF4J and Pax Logging clients. Note that all this clients must use the Pax Logging    Client library in the proper way. See documentation for details.</description>
    <size>542071</size>
    <documentation>http://www.ops4j.org/projects/pax/logging/pax-logging-service</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.html</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.ops4j.pax.logging.pax-logging-service'/>
      <p n='presentationname' v='OPS4J Pax Logging - Service'/>
      <p n='version' t='version' v='1.6.3'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.logging.spi'/>
      <p n='version' t='version' v='1.6.3'/>
      <p n='provider' v='paxlogging'/>
    </capability>
    <require name='package' filter='(&amp;(package=com.ibm.uvm.tools))' extend='false' multiple='false' optional='true'>Import package com.ibm.uvm.tools;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=com.sun.jdmk.comm))' extend='false' multiple='false' optional='true'>Import package com.sun.jdmk.comm;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.jmdns))' extend='false' multiple='false' optional='true'>Import package javax.jmdns;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.jms))' extend='false' multiple='false' optional='true'>Import package javax.jms;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.mail))' extend='false' multiple='false' optional='true'>Import package javax.mail;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.mail.internet))' extend='false' multiple='false' optional='true'>Import package javax.mail.internet;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.management))' extend='false' multiple='false' optional='true'>Import package javax.management;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.naming))' extend='false' multiple='false' optional='true'>Import package javax.naming;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing))' extend='false' multiple='false' optional='true'>Import package javax.swing;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.border))' extend='false' multiple='false' optional='true'>Import package javax.swing.border;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.event))' extend='false' multiple='false' optional='true'>Import package javax.swing.event;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.table))' extend='false' multiple='false' optional='true'>Import package javax.swing.table;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.text))' extend='false' multiple='false' optional='true'>Import package javax.swing.text;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.swing.tree))' extend='false' multiple='false' optional='true'>Import package javax.swing.tree;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=4.3.0))' extend='false' multiple='false' optional='false'>Import package org.apache.avalon.framework.logger;version=4.3</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.0))' extend='false' multiple='false' optional='false'>Import package org.apache.commons.logging;version=1.1</require>
    <require name='package' filter='(&amp;(package=org.apache.juli.logging)(version&gt;=1.0.0))' extend='false' multiple='false' optional='false'>Import package org.apache.juli.logging;version=1.0</require>
    <require name='package' filter='(&amp;(package=org.knopflerfish.service.log)(version&gt;=1.1.0)(!(version&gt;=2.0.0))(provider=paxlogging)(mandatory:&lt;*provider))' extend='false' multiple='false' optional='false'>Import package org.knopflerfish.service.log;provider=paxlogging;version="[1.1.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging)(version&gt;=0.9.5)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging;version="[0.9.5,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging.avalon)(version&gt;=1.6.0))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging.avalon;version=1.6</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging.slf4j)(version&gt;=1.6.0))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging.slf4j;version=1.6</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.logging.spi)(version&gt;=1.6.0)(provider=paxlogging)(mandatory:&lt;*provider))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.logging.spi;provider=paxlogging;version=1.6</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.cm;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.event;resolution:=optional;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.log;version="[1.3.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.util.tracker;version="[1.3.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0))' extend='false' multiple='false' optional='false'>Import package org.slf4j;version=1.6</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
    <require name='package' filter='(&amp;(package=org.xml.sax.helpers))' extend='false' multiple='false' optional='false'>Import package org.xml.sax.helpers</require>
  </resource>
  <resource id='org.ops4j.pax.url.mvn/1.2.8' symbolicname='org.ops4j.pax.url.mvn' presentationname='OPS4J Pax Url - mvn:' uri='pax-url-mvn-1.2.8.jar' version='1.2.8'>
    <description>OPS4J Pax Url - mvn: protocol handler.    Detailed information to be found at http://wiki.ops4j.org/confluence/x/CoA6.</description>
    <size>112784</size>
    <documentation>http://www.ops4j.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.html</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.ops4j.pax.url.mvn'/>
      <p n='presentationname' v='OPS4J Pax Url - mvn:'/>
      <p n='version' t='version' v='1.2.8'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.url.URLStreamHandlerService'/>
      <p n='url.handler.protocol' v='mvn'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.url.mvn'/>
      <p n='version' t='version' v='1.2.8'/>
    </capability>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='false'>Import package javax.xml.parsers</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.logging;resolution:=optional;version=1.0.4</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.url.mvn)(version&gt;=1.2.8))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.url.mvn;version=1.2.8</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.cm;resolution:=optional;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='false'>Import package org.w3c.dom</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='false'>Import package org.xml.sax</require>
  </resource>
  <resource id='org.ops4j.pax.url.wrap/1.2.8' symbolicname='org.ops4j.pax.url.wrap' presentationname='OPS4J Pax Url - wrap:' uri='pax-url-wrap-1.2.8.jar' version='1.2.8'>
    <description>OPS4J Pax Url - wrap: protocol handler.    Detailed information to be found at http://wiki.ops4j.org/confluence/x/KoA6.</description>
    <size>339965</size>
    <documentation>http://www.ops4j.org/</documentation>
    <license>http://www.apache.org/licenses/LICENSE-2.0.html</license>
    <capability name='bundle'>
      <p n='symbolicname' v='org.ops4j.pax.url.wrap'/>
      <p n='presentationname' v='OPS4J Pax Url - wrap:'/>
      <p n='version' t='version' v='1.2.8'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.url.URLStreamHandlerService'/>
      <p n='url.handler.protocol' v='wrap'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.ops4j.pax.url.wrap'/>
      <p n='version' t='version' v='1.2.8'/>
    </capability>
    <require name='package' filter='(&amp;(package=aQute.service.scripting))' extend='false' multiple='false' optional='true'>Import package aQute.service.scripting;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.net.ssl))' extend='false' multiple='false' optional='false'>Import package javax.net.ssl</require>
    <require name='package' filter='(&amp;(package=javax.xml.parsers))' extend='false' multiple='false' optional='true'>Import package javax.xml.parsers;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=javax.xml.transform.stream))' extend='false' multiple='false' optional='true'>Import package javax.xml.transform.stream;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.0.4))' extend='false' multiple='false' optional='true'>Import package org.apache.commons.logging;resolution:=optional;version=1.0.4</require>
    <require name='package' filter='(&amp;(package=org.ops4j.pax.url.wrap)(version&gt;=1.2.8))' extend='false' multiple='false' optional='false'>Import package org.ops4j.pax.url.wrap;version=1.2.8</require>
    <require name='package' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.framework;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.cm;resolution:=optional;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0))' extend='false' multiple='false' optional='true'>Import package org.osgi.service.log;resolution:=optional;version=1.3</require>
    <require name='package' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' extend='false' multiple='false' optional='false'>Import package org.osgi.service.url;version="[1.0.0,2.0.0)"</require>
    <require name='package' filter='(&amp;(package=org.w3c.dom))' extend='false' multiple='false' optional='true'>Import package org.w3c.dom;resolution:=optional</require>
    <require name='package' filter='(&amp;(package=org.xml.sax))' extend='false' multiple='false' optional='true'>Import package org.xml.sax;resolution:=optional</require>
  </resource>
  <resource id='org.eclipse.osgi/3.6.2.R36x_v20110210' symbolicname='org.eclipse.osgi' presentationname='OSGi System Bundle' uri='osgi-3.6.2.R36x_v20110210.jar' version='3.6.2.R36x_v20110210'>
    <description>OSGi System Bundle</description>
    <size>1148372</size>
    <documentation>http://www.eclipse.org</documentation>
    <capability name='bundle'>
      <p n='symbolicname' v='org.eclipse.osgi'/>
      <p n='presentationname' v='OSGi System Bundle'/>
      <p n='version' t='version' v='3.6.2.R36x_v20110210'/>
      <p n='manifestversion' v='2'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.packageadmin.PackageAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.permissionadmin.PermissionAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.startlevel.StartLevel'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.eclipse.osgi.service.debug.DebugOptions'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.event'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.console'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.eventmgr'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.log'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.launch'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.datalocation'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.debug'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.environment'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.localization'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.pluginconversion'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.resolver'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.runnable'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.security'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.urlconversion'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.signedcontent'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.storagemanager'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.util'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.launch'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.service'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.condpermadmin'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.framework'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.packageadmin'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.permissionadmin'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.startlevel'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.url'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='version' t='version' v='1.4.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends:' v='org.eclipse.core.runtime'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.internal.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.internal.stats'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends:' v='org.eclipse.core.runtime'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor.bundlefile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor.hooks'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.baseadaptor.loader'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.debug'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.core'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol.bundleentry'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol.bundleresource'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.protocol.reference'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.reliablefile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.util'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.baseadaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.composite'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader.buddy'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.module'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.profile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.resolver'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.serviceregistry'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.permadmin'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.provisional.service.security'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='x-friends:' v='org.eclipse.equinox.security.ui'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.provisional.verifier'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends:' v='org.eclipse.update.core,org.eclipse.ui.workbench,org.eclipse.equinox.p2.artifact.repository'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.service.security'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends:' v='org.eclipse.equinox.security.ui'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.signedcontent'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.internal.composite'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal:' v='true'/>
    </capability>
    <require name='ee' filter='(|(ee=J2SE-1.5)(ee=OSGi/Minimum-1.2))' extend='false' multiple='false' optional='false'>Execution Environment (|(ee=J2SE-1.5)(ee=OSGi/Minimum-1.2))</require>
  </resource>
</repository>